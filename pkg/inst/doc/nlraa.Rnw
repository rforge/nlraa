%\VignetteIndexEntry{Nonlinear Models}
%\VignetteDepends{nlme, nlraa}

\documentclass[12pt]{article}
\usepackage{Sweave,amsmath,amsfonts,bm}
%\usepackage[authoryear,round]{natbib}
%\bibliographystyle{plainnat}
% \DefineVerbatimEnvironment{Sinput}{Verbatim}
% {formatcom={\vspace{-1ex}},fontshape=sl,
%   fontfamily=courier,fontseries=b, fontsize=\footnotesize}
% \DefineVerbatimEnvironment{Soutput}{Verbatim}
% {formatcom={\vspace{-1ex}},fontfamily=courier,fontseries=b,%
%   fontsize=\footnotesize}
\title{Fitting nonlinear mixed models}
%\author{Fernando Miguez\\Department of Agronomy\\%
%  Iowa State University}
\begin{document}
\SweaveOpts{engine=R,eps=FALSE,pdf=TRUE,strip.white=true,keep.source=TRUE}
% \SweaveOpts{include=FALSE}
% \setkeys{Gin}{width=\textwidth}
\newcommand{\code}[1]{\texttt{\small{#1}}}
\newcommand{\package}[1]{\textsf{\small{#1}}}

<<preliminaries,echo=FALSE,results=hide>>=
options(width=65,digits=5)
library(nlme)
library(ggplot2)
library(nlraa)
library(lattice)
@
\maketitle
\begin{abstract}
  The \package{nlraa} package illustrates how to fit nonlinear mixed models with
  nlme and related packages. It also adds a few selfStart functions such as the
  beta growth function (Yin et al. 2003).
\end{abstract}

\section{Introduction}
\label{sec:intro}

The \package{nlraa} is distributed as part of a publication that illustrates the
fit of nonlinear mixed models to be published in Agronomy Journal.

\section{Example}

We start by looking at biomass accumulation data from an experiment conducted in
Greece. The dataset \code{sm} is included as part of the \package{nlraa}.

<<strsm>>=
data(sm)
str(sm)
sm
@

The data represents \code{Yield} as harvested biomass for three crops: maize
(\code{M}), fiber sorghum (\code{F}) and sweet sorghum (\code{S}).

%<<smggplot, fig=TRUE, include=FALSE, echo=FALSE, width=8,height=9>>=
%## p1 <- ggplot(data = sm, aes(y = Yield, x = DOY)) +
%##   facet_grid(. ~ Input) +
%##   geom_point(aes(fill=Crop, shape=Crop), size=2) +
%##   scale_shape_manual(values=c(24,21,1)) +
%##   scale_fill_manual(values = c("grey","black","black")) +
%##   scale_x_continuous("Day of the Year") +
%##   scale_y_continuous("Dry biomass (Mg/ha)") +
%##   theme_bw()
%## print(p1)
%p1 <- xyplot(Yield ~ DOY | as.factor(Input) , groups = Crop, data = sm)
%print(p1)
%@
\begin{figure}[htbp!]
  \centering
%  \includegraphics{nlraa-smggplot}
    \includegraphics{./figs/MaizeSorghum.png}
  \caption{Biomass accumulation for three crops: maize (M), fiber sorghum (F)
    and sweet sorghum (S) collected in Greece in 2009. The two panels represent
    the level of agricultural input.}
  \label{fig:smggplot}
\end{figure}

Before starting with the model fit we need to manipulate the data by creating an
index which describes the experimental unit (eu).  We also delete the DOY 141
when crops where planted.

<<>>=
sm$eu <- with(sm, factor(Block):factor(Input):factor(Crop))
sm2 <- subset(sm, DOY != 141)
@

The next step is to create the \code{groupedData} which is a convenient structre
to be used throughout the fitting process in \package{nlme}.

<<>>=
smG <- groupedData(Yield ~ DOY | eu, data = sm2)
@

Originally, Danalatos et al. (2009) fitted the beta growth function as
described by Yin et al. (2003). In \package{nlraa} we provide \code{selfStart}
function \code{SSbgf} to improve the fitting process.

<<>>=
fit.lis <- nlsList(Yield ~ SSbgf(DOY, w.max, t.e, t.m), data = smG)
@

There are three crops, two levels of agronomic input and four blocks
which results in 24 possible combinations. We fitted the model to
these 24 experimental units and obtained apparent convergence in only
10. This suggests that some modifications are needed.

<<nlslisResid, fig=TRUE, include=FALSE, width=8, height=8>>=
print(plot(fit.lis))
@
\begin{figure}[tb]
  \centering
  \includegraphics{nlraa-nlslisResid}
  \caption{Residuals from individually fitting the beta growth function to all
    experimental units. There is evidence of bias for lower biomass values.}
  \label{fig:nlslisResid}
\end{figure}

<<nlslisIntervals, fig=TRUE, include=FALSE,width=8,height=8>>=
print(plot(intervals(fit.lis)))
@
\begin{figure}[tb]
  \centering
  \includegraphics{nlraa-nlslisIntervals}
  \caption{Confidence intervals from individually fitting the beta growth function to all
    experimental units.}
  \label{fig:nlslisIntervals}
\end{figure}

From the residuals plot we see some evidence of the inadequacy of the
model. In particular the model over predicts at low values. We relax
the convergence criteria to achieve a fitted model.

<<>>=
fit.me <- nlme(fit.lis, control = list(minScale =1e-50, pnlsTol=0.01))
@

<<nlmeResid, fig=TRUE, include=FALSE,width=8,height=8>>=
print(plot(fit.me))
@
\begin{figure}[tb]
  \centering
  \includegraphics{nlraa-nlmeResid}
  \caption{Residuals of the non-linear mixed model.}
  \label{fig:nlmeResid}
\end{figure}

<<nlmeAugPred, fig=TRUE, include=FALSE,width=8,height=8>>=
print(plot(augPred(fit.me, level = 0:1)))
@
\begin{figure}[tb]
  \centering
  \includegraphics{nlraa-nlmeAugPred}
  \caption{Fixed and experimental unit-level fits of the non-linear mixed model.}
  \label{fig:nlmeAugPred}
\end{figure}

A modified beta growth function proposed by Yin et. al (2003) -- included in the
errata -- allows for a delayed start of growth by modifying the $t_b$ parameter.

\[ y = w_b + (w_{max} - w_b) \left (1 + \frac{t_e - t}{t_e - t_m} \right ) \left (\frac{t - t_b}{t_e - t_b} \right )^\frac{t_e - t_b}{t_e - t_m} \]

\[ t_b < t_m < t_e \]

We include this as \code{bgf2} but not the selfStart version at this
point. We also fix the $w_b$ and the $t_b$ parameters, so they are not
part of the fitting process. There are good reasons for this: We know
the initial biomass is minimal (seed weight) and we know the day of
planting (it does not need to be optimized).

<<>>=
fit.lis2 <- nlsList(Yield ~ bgf2(DOY, w.max, w.b = 0, t.e, t.m, t.b = 141),
                    data = smG,
                    start = c(w.max = 30, t.e=280, t.m=240))
@

<<nlslisResid2, fig=TRUE, include=FALSE,width=8,height=8>>=
print(plot(fit.lis2))
@
\begin{figure}[tb]
  \centering
  \includegraphics{nlraa-nlslisResid2}
  \caption{Residuals for the modified beta growth function for the individual fits.}
  \label{fig:nlslisResid2}
\end{figure}

Figure \ref{fig:nlslisResid2} shows a much lower bias at lower values.

We proceed to fit the non-linear mixed model and then we simplify the
variance-covariance random effects structure.

<<>>=
fit.me2 <- nlme(fit.lis2)
fit2.me2 <- update(fit.me2, random = pdDiag(w.max + t.e + t.m ~ 1))
anova(fit.me2, fit2.me2)
@

Some of the covariances might be significant, but we'll look at this later. We
will next include the effects of Crop type and Input in the fixed part of the
model. We want to know how the parameters are affected by the treatment effects.

<<>>=
fe <- fixef(fit2.me2) ## Some starting values with visual help
fit3.me2 <- update(fit2.me2, fixed = list(w.max + t.e + t.m ~ Crop),
                  start = c(fe[1], -10, 20, fe[2], -40, 0, fe[3], -40, 0))
## We next include the Input
fe2 <- fixef(fit3.me2)
fit4.me2 <- update(fit3.me2, fixed = list(w.max + t.e + t.m
                               ~ Crop + Input),
                  start = c(fe2[1:3], 0, fe2[4:6], 0, fe2[7:9], 0))
## and the interaction
fe3 <- fixef(fit4.me2)
fit5.me2 <- update(fit4.me2,
                   fixed = list(w.max + t.e + t.m
                     ~ Crop + Input + Crop:Input),
                  start = c(fe3[1:4], 0, 0,
                            fe3[5:8], 0, 0,
                            fe3[9:12], 0, 0))
@

The current model displays some evidence of unequal variance as shown
in (Fig. \ref{fig:nlmeResid2}). The amount of dispersion around zero
is larger for low fitted values and the amount for large fitted values
is larger.

<<nlmeResid2, fig=TRUE, include=FALSE,width=8,height=8>>=
print(plot(fit5.me2))
@
\begin{figure}[tb]
  \centering
  \includegraphics{nlraa-nlmeResid2}
  \caption{Residuals for the modified beta growth function for non-linear mixed
    model with the fixed effects of Crop and Input level.}
  \label{fig:nlmeResid2}
\end{figure}

We fit two models one where the variance depends on the Crop (since visually the
crops are so different) and another one where it does not depend on the Crop.

<<>>=
fit6.me2 <- update(fit5.me2,
                   weights = varPower(form = ~ fitted(.) | Crop))

fit7.me2 <- update(fit6.me2, weights = varPower(form = ~ fitted(.)))

anova(fit6.me2, fit7.me2)
@

Model \code{fit6.me2} is better according to the AIC criteria and the likelihood
ratio test.

<<>>=
fit6.me2
@

Since random effects are almost zero. We remove them from the model and use the
\code{gnls} function which is specifically written for models without random effects.

<<>>=
## Random effects are almost zero
fit8.me2 <- gnls(Yield ~ bgf2(DOY, w.max, t.e, t.m, w.b=0, t.b=141),
                 data = smG,
                 params = list(w.max + t.e + t.m ~ Crop + Input
                                                   + Crop:Input),
                 weights = varPower(form = ~ fitted(.) | Crop),
                 start = fixef(fit7.me2))
anova(fit6.me2, fit8.me2)
@

Model \code{fit8.me2} is better than \code{fit6.me2} according to AIC and BIC.

<<>>=
anova(fit8.me2)
@ 

This shows that the Crop, Input and interaction are significant for
all terms except for the \texttt{t.m} parameter.

Residuals look good with much less overprediction at lower values. The
autocorrelation does not appear to be a concern (not shown).

<<>>=
print(plot(fit8.me2))
@

We finalize the fitting exercise by plotting observed and predicted \ref{fig:finalModelFit}.

<<>>=
smG$prds <- fitted(fit8.me2)

doys <- 168:303
ndat <- expand.grid(DOY=doys, Crop= unique(smG$Crop), Input=c(1,2))
ndat$preds <- predict(fit8.me2, newdata = ndat)

ndat2 <- ndat
ndat2[ndat2$Crop == "M" & ndat2$DOY > 270,"preds"] <- NA
ndat2 <- na.omit(ndat2)
@

% ## <<finalModelFit, fig=TRUE, include=FALSE, echo = FALSE, width=8,height=8>>=
% ## ## p2 <- ggplot(data = smG, aes(y = Yield, x = DOY)) +
% ## ##   facet_grid(. ~ Input) +
% ## ##   geom_point(aes(fill=Crop, shape=Crop), size=2) +
% ## ##   geom_line(aes(x = DOY, y = preds, linetype = Crop), data=ndat2) +
% ## ##   scale_shape_manual(values=c(24,21,1)) +
% ## ##   scale_fill_manual(values = c("grey","black","black")) +
% ## ##   scale_x_continuous("Day of the Year") +
% ## ##   scale_y_continuous("Dry biomass (Mg/ha)") +
% ## ##   theme_bw()
% ## ## print(p2)
% ## p2 <- xyplot(Yield + fitted(fit8.me2) ~ DOY | as.factor(Input), groups = Crop,
% ##              data = smG,
% ##        type = c("p","a"),
% ##              distribute.type=TRUE,
% ##        ylab = "Dry biomass (Mg/ha)",
% ##        xlab = "Day of the Year")
% ## print(p2)
% ## @

\begin{figure}[tb]
  \centering
%  \includegraphics{nlraa-finalModelFit}
    \includegraphics{./figs/SorghumMaizePredsCI.png}
  \caption{Observed data and fit for the final model. }
  \label{fig:finalModelFit}
\end{figure}

\end{document}
